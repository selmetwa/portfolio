---
interface Props {
    title: string
}
import Navigation from '../components/Navigation.astro'
const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
    <head>
        <meta charset='UTF-8' />
        <meta name='description' content='Astro description' />
        <meta name='viewport' content='width=device-width' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <link rel='preconnect' href='https://fonts.googleapis.com' />
        <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
        <script type="module" src="https://cdn.jsdelivr.net/npm/arabic-virtual-keyboard/+esm"></script>
        <link
            href='https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap'
            rel='stylesheet'
            media='print'
            onload="this.media='all'"
        />
        <meta name='generator' content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        <aside></aside>
        <main>
            <Navigation />
            <slot />
        </main>
        <aside></aside>
    </body>
</html>
<style is:global>
    /* https://www.joshwcomeau.com/css/custom-css-reset/ */
    /*
          1. Use a more-intuitive box-sizing model.
        */

    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    /*
          2. Remove default margin
        */

    * {
        margin: 0;
    }

    /*
          5. Improve media defaults
        */

    img,
    picture,
    video,
    canvas,
    svg {
        display: block;
        max-width: 100%;
    }

    /*
          6. Remove built-in form typography styles
        */

    input,
    button,
    textarea,
    select {
        font: inherit;
    }

    /*
          7. Avoid text overflows
        */

    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        overflow-wrap: break-word;
    }

    /*
          8. Create a root stacking context
        */

    #root,
    #__next {
        isolation: isolate;
    }

    * {
        --brand-hue: 250;
        --brand-saturation: 100%;
        --brand-lightness: 75%;
        /* Light Theme */
        --brand-light: hsl(
            var(--brand-hue) var(--brand-saturation) var(--brand-lightness)
        );
        --text1-light: hsl(var(--brand-hue) var(--brand-saturation) 10%);
        --text2-light: hsl(var(--brand-hue) 30% 30%);
        --text3-light: hsl(var(--brand-hue) 30% 40%);
        --tile1-light: hsl(var(--brand-hue) 25% 85%);
        --tile2-light: hsl(var(--brand-hue) 20% 80%);
        --tile3-light: hsl(var(--brand-hue) 20% 75%);
        --tile4-light: hsl(var(--brand-hue) 20% 70%);
        --tile5-light: hsl(var(--brand-hue) 20% 65%);
        --tile6-light: hsl(var(--brand-hue) 20% 60%);
        --green-light: hsl(134, 26%, 40%);
        --red-light: hsl(0, 62%, 71%);
        --tile-shadow-light: var(--brand-hue) 10% 20%;
        --shadow-strength-light: 0.02;
        /* dim */
        --brand-dim: hsl(
            var(--brand-hue) calc(var(--brand-saturation) / 1.25)
                calc(var(--brand-lightness) / 1.25)
        );
        --text1-dim: hsl(var(--brand-hue) 15% 75%);
        --text2-dim: hsl(var(--brand-hue) 10% 61%);
        --text3-dim: hsl(var(--brand-hue) 10% 50%);
        --tile1-dim: hsl(var(--brand-hue) 10% 20%);
        --tile2-dim: hsl(var(--brand-hue) 10% 25%);
        --tile3-dim: hsl(var(--brand-hue) 5% 30%);
        --tile4-dim: hsl(var(--brand-hue) 5% 35%);
        --tile5-dim: hsl(var(--brand-hue) 5% 40%);
        --tile6-dim: hsl(var(--brand-hue) 5% 45%);
        --green-dim: hsl(128, 21%, 48%);
        --red-dim: hsl(0, 36%, 52%);
        --tile-shadow-dim: var(--brand-hue) 30% 13%;
        --shadow-strength-dim: 0.2;
    }

    :root {
        color-scheme: light;
        /* set defaults */
        --brand: var(--brand-light);
        --text1: var(--text1-light);
        --text2: var(--text2-light);
        --text3: var(--text3-light);
        --tile1: var(--tile1-light);
        --tile2: var(--tile2-light);
        --tile3: var(--tile3-light);
        --tile4: var(--tile4-light);
        --tile5: var(--tile5-light);
        --tile6: var(--tile6-light);
        --green1: var(--green-light);
        --red1: var(--red-light);
        --tile-shadow-light: var(--tile-shadow-light);
        --shadow-strength: var(--shadow-strength-light);
        --spacing: 0.35rem;
        --overlay: var(--spacing) calc(var(--spacing) * -3) var(--spacing)
            var(--spacing);
        --size-one: 10px;
        --size-two: 10px;
        --font-main: 'DM Sans', sans-serif;
    }

    [color-scheme='light'] {
        color-scheme: light;
        /* set defaults */
        --brand: var(--brand-light);
        --text1: var(--text1-light);
        --text2: var(--text2-light);
        --text3: var(--text3-light);
        --tile1: var(--tile1-light);
        --tile2: var(--tile2-light);
        --tile3: var(--tile3-light);
        --tile4: var(--tile4-light);
        --tile5: var(--tile5-light);
        --tile6: var(--tile6-light);
        --green1: var(--green-light);
        --red1: var(--red-light);
        --tile-shadow: var(--tile-shadow-light);
        --shadow-strength: var(--shadow-strength-light);
    }

    [color-scheme='dim'] {
        color-scheme: dark;
        --brand: var(--brand-dim);
        --text1: var(--text1-dim);
        --text2: var(--text2-dim);
        --text3: var(--text3-dim);
        --tile1: var(--tile1-dim);
        --tile2: var(--tile2-dim);
        --tile3: var(--tile3-dim);
        --tile4: var(--tile4-dim);
        --tile5: var(--tile5-dim);
        --tile6: var(--tile6-dim);
        --green1: var(--green-dim);
        --red1: var(--red-dim);
        --tile-shadow: var(--tile-shadow-dim);
        --shadow-strength: var(--shadow-strength-dim);
    }

    body {
        line-height: 1.5;
        -webkit-font-smoothing: antialiased;
        background-color: var(--tile1);
        display: grid;
        grid-template-columns: 1fr min(100%, 1000px) 1fr;
    }

    aside {
        min-height: 100vh;
        height: 100%;
        background-color: var(--tile1);
        background-image: linear-gradient(
                to right,
                var(--tile2) 1px,
                transparent 1px
            ),
            linear-gradient(to bottom, var(--tile2) 1px, transparent 1px);
        background-size: 10px 10px;
        position: relative;
    }
    main {
        /* outline: 200px solid var(--tile6); */
        border-left: 1px solid var(--tile6);
        border-right: 1px solid var(--tile6);
        width: min(100%, 1000px);
        margin-inline: auto;
        background-color: var(--tile3);
        height: 100%;
        min-height: 100vh;
    }
</style>
