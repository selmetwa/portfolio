---
import Layout from '../../layouts/Layout.astro'
import Header from '../../components/Header.astro'

const jsCode = `
/**
 * Return corresponding english letter for arabic letter
 * @param {string} letter
 * @returns {string} 
 */
export const convertLetterToArabic = (letter) => {
  const letterObject = letters.find((obj) => obj.en === letter);
  const arabicLetter = letterObject && letterObject.ar;
  return arabicLetter;
}
`

const keyboardSwapCode = `
if (["CapsLock", "Shift"].includes(key)) {
  // render the shifted keyboard
  this.handleToggleButtonGroups(shifted_desktop_button_groups);
}
`

const dots = `
// switch to check what key was pressed
switch (true) {
  ...
  case key === "'" // dot sprinkler

  // letters that accept dots
  if (['d', 'g', 's', 't', 'h', 'H'].includes(previousLetter)) {
    // form our new letter
    const newKey = previousLetter + "'";

    // delete the previous dotless letter
    const res = BackspaceFactory(key, state);

    // again use our lookup function, but this time with the new letter
    return LettersFactory(newKey, newState);
  }
}
`
---

<Layout title='Writing Arabic in English'>
    <Header title='Writing Arabic in English' />
    <div class='wrapper'>
        <p class='text'>
            First of all, what is a phonetic keyboard? A phonetic Arabic
            keyboard allows users to type Arabic sounds using Latin characters
            that closely resemble how they would pronounce them. This makes it
            easier for beginners or casual users to engage with the language
            without the steep learning curve of mastering an entirely different
            keyboard layout.
        </p>
        <p class='text'>
            However there a few problems we have to solve to do this
        </p>
        <ul class='list'>
            <li>Arabic is written from right to left</li>
            <li>Arabic is a cursive script</li>
            <li>
                Arabic and English have a different number of letters, 28 vs 26
                respectively.
            </li>
            <li>
                Arabic contains sounds that don’t have direct equivalents in
                English.
            </li>
            <li>Arabic uses diacritics to indicate short vowels</li>
            <li>Arabic has emphatic letters</li>
        </ul>

        <section class='section'>
            <h2>Arabic is written from right to left</h2>
            <p class='text'>
                Arabic is written from right to left, this actually wasn't a
                problem as we could just use our old friend <code
                    >direction: rtl;</code
                > in CSS and call it a day.
            </p>
        </section>
        <section>
            <h2>Arabic is a cursive script</h2>
            <p class='text'>
                Arabic is a cursive script, which means letters are connected to
                eachother and look different depending on their position in a
                word.
            </p>
            <p class='text'>
                Lets take the letter <span lang='ar' class='arabic'>ب</span> (baa)
                for example.
            </p>
            <p class='text'>
                - Beginning of the word: <span lang='ar' class='arabic'
                    ><span class='highlight'>ب</span>يت
                </span>(house - byt)
            </p>
            <p class='text'>
                - Middle of the word: <span lang='ar' class='arabic'
                    >ح<span class='highlight'>ب</span>ي<span class='highlight'
                        >ب</span
                    >ي</span
                > (my love - habibi)
            </p>
            <p class='text'>
                - End of the word: <span lang='ar' class='arabic'
                    >كت<span class='highlight'>ب</span></span
                > (write - ktb)
            </p>
            <p class='text'>
                - Isolated: <span lang='ar' class='arabic'>
                    كِتَا<span class='highlight'>ب</span></span
                > (book - ktab)
            </p>

            <p class='text'>
                Luckily the web browser (mostly) handles this for us, so we
                don't have to worry about it. Thank you UTF-8.
            </p>
            <p class='text'>
                As an aside look at how the word for (write) <span
                    lang='ar'
                    class='arabic'>كت<span class='highlight'>ب</span></span
                > closely resembles the word for (book) <span
                    lang='ar'
                    class='arabic'>كِتَا<span class='highlight'>ب</span></span
                >. This is because Arabic is a root based language, where words
                are derived from a root of 3 or 4 letters. 
                <a href="https://arabicforbeginners.com/topic/arabic-root-system-overview/" target="_blank">
                  More on that here
                </a>
            </p>
            <p class="text">
              And don't mind the
                marks around the word (book) we will get to that in a bit.
            </p>
        </section>
        <section class='section'>
            <h2>Mapping English to Arabic</h2>
            <p class='text'>
                If we want a phonetic keyboard we need to map arabic letters to
                the english keys in a way that makes sense for someone with an
                english centric brain.
            </p>
            <p class='text'>
                So if someone types the letter <code>b</code>, we want to spit
                out the closest corresponding arabic letter-- in this case <span
                    lang='ar'
                    class='arabic'>ب</span
                > (baa).
            </p>
            <p class='text'>
                Lucky for us 17/28 arabic letters have a rough equivalent in
                english. And multiple english letters actually map to the same
                sound in arabic. (Click for audio)
            </p>
            <ul class='list grid'>
                <li>
                    <button value='alif' class='button letter-button'>
                        <code>a</code> = <span class='arabic'>ا</span> (alif)
                    </button>
                </li>
                <li>
                    <button value='ba' class='button letter-button'>
                        <code>b</code> = <span class='arabic'>ب</span> (baa)
                    </button>
                </li>
                <li>
                    <button value='ta' class='button letter-button'>
                        <code>t</code> = <span class='arabic'>ت</span> (ta)
                    </button>
                </li>
                <li>
                    <button value='jeem' class='button letter-button'>
                        <code>j</code> = <span class='arabic'>ج</span> (jeem)
                    </button>
                </li>
                <li>
                    <button value='dal' class='button letter-button'>
                        <code>d</code> = <span class='arabic'>د</span> (dal)
                    </button>
                </li>
                <li>
                    <button value='ra' class='button letter-button'>
                        <code>r</code> = <span class='arabic'>ر</span> (ra)
                    </button>
                </li>
                <li>
                    <button value='zay' class='button letter-button'>
                        <code>z</code> = <span class='arabic'>ز</span> (zay)
                    </button>
                </li>
                <li>
                    <button value='seen' class='button letter-button'>
                        <code>s,c</code> = <span class='arabic'>س</span> (seen)
                    </button>
                </li>
                <li>
                    <button value='fa' class='button letter-button'>
                        <code>f</code> = <span class='arabic'>ف</span> (fa)
                    </button>
                </li>
                <li>
                    <button value='qaf' class='button letter-button'>
                        <code>q</code> = <span class='arabic'>ق</span> (qaf)
                    </button>
                </li>
                <li>
                    <button value='kaf' class='button letter-button'>
                        <code>k</code> = <span class='arabic'>ك</span> (kaf)
                    </button>
                </li>
                <li>
                    <button value='lam' class='button letter-button'>
                        <code>l</code> = <span class='arabic'>ل</span> (lam)
                    </button>
                </li>
                <li>
                    <button value='meem' class='button letter-button'>
                        <code>m</code> = <span class='arabic'>م</span> (meem)
                    </button>
                </li>
                <li>
                    <button value='noon' class='button letter-button'>
                        <code>n</code> = <span class='arabic'>ن</span> (noon)
                    </button>
                </li>
                <li>
                    <button value='ha' class='button letter-button'>
                        <code>h</code> = <span class='arabic'>ه</span> (ha)
                    </button>
                </li>
                <li>
                    <button value='waw' class='button letter-button'>
                        <code>w,u,o</code> = <span class='arabic'>و</span> (waw)
                    </button>
                </li>
                <li>
                    <button value='yaa' class='button letter-button'>
                        <code>y,e,i</code> = <span class='arabic'>ي</span> (ya)
                    </button>
                </li>
            </ul>
            <p class='text'>
                This case is pretty simple to handle, we can just map the
                english letter to the arabic letter, and then write a simple
                lookup function.
            </p>
            <pre>
<code>
{JSON.stringify({
  type: 'letter',
  ar: 'ب',
  en: 'b',
  label: ['b'],
  title: 'Ba',
  shifted: 'ب',
}
, null, 2)}
</code>
</pre>
            <pre>
<code>
  {jsCode}
</code>
</pre>
        </section>
        <section class='section'>
            <h2>What about the other 11 letters?</h2>
            <p class='text'>
                I decided to break up these remaining 11 letters into two
                categories, the first category are the letters that bear some
                similarity to letters arabic letters that map to english
                letters. For the sake of this article lets call these <b
                    >"Emphatic"</b
                > letters, of which there are five.
            </p>
            <p class='text'>
                The second category are the letters that don't really bear any
                resemblance to english letters.
            </p>
            <h3>Emphatic Letters</h3>
            <p class='text'>
                These letters are pronounced from the back of the throat, and
                don't really have a direct equivalent in english, but they do
                bear some resemblance to other arabic letters in <i
                    >my opinion.</i
                >
            </p>
            <ul class='list grid'>
                <li>
                    <button value='haa' class='letter-button'>
                        <span class='arabic'>ح (haa)</span>
                    </button>
                </li>
                <li>
                    <button value='saad' class='letter-button'>
                        <span class='arabic'>ص (saad)</span>
                    </button>
                </li>
                <li>
                    <button value='dhaad' class='letter-button'>
                        <span class='arabic'>ض (daad)</span>
                    </button>
                </li>
                <li>
                    <button value='taa' class='letter-button'>
                        <span class='arabic'>ط (taa)</span>
                    </button>
                </li>
                <li>
                    <button value='dhaa' class='letter-button'>
                        <span class='arabic'>ظ (dhaa)</span>
                    </button>
                </li>
            </ul>
            <p class='text'>
                If you are being very generous I think you can recognize some
                similarities between these letters and some of the simpler
                letters we have already looked it.
            </p>
            <p class='text'>
                To me ح, ص, ض, ط, and ظ are similar-sh to ه, س, د, ت, and ز
                respectively. Just with a little more umph.
            </p>
            <p class='text'>What do you think?</p>
            <ul>
                <li class='list-row'>
                    <button value='haa' class='letter-button'>
                        <span class='arabic'>ح (haa)</span>
                    </button>
                    <p>is a stronger version of</p>

                    <button value='ha' class='button letter-button'>
                        <span class='arabic'>ه (ha)</span> represented by a lowercase
                        <b>h</b>
                    </button>
                </li>
                <li class='list-row'>
                    <button value='saad' class='letter-button'>
                        <span class='arabic'>ص (saad)</span>
                    </button>
                    <p>is a stronger version of</p>
                    <button value='seen' class='button letter-button'>
                        <span class='arabic'>س (seen) </span>represented by a
                        lowercase <b>s</b>
                    </button>
                </li>
                <li class='list-row'>
                    <button value='dhaad' class='letter-button'>
                        <span class='arabic'>ض (daad)</span>
                    </button>
                    <p>is a stronger version of</p>
                    <button value='dal' class='button letter-button'>
                        <span class='arabic'>د (dal)</span> represented by a lowercase
                        <b>d</b>
                    </button>
                </li>
                <li class='list-row'>
                    <button value='taa' class='letter-button'>
                        <span class='arabic'>ط (taa)</span>
                    </button>
                    <p>is a stronger version of</p>
                    <button value='ta' class='button letter-button'>
                        <span class='arabic'>ت (ta)</span> represented by a lowercase
                        <b>t</b>
                    </button>
                </li>

                <p class='text'>
                    <i>This is probably the most questionable one of all 👇</i>
                </p>
                <li class='list-row'>
                    <button value='dhaa' class='letter-button'>
                        <span class='arabic'>ظ (dhaa)</span>
                    </button>
                    <p>is a stronger version of</p>
                    <button value='zay' class='button letter-button'>
                        <span class='arabic'>ز (zay)</span> represented by a lowercase
                        <b>z</b>
                    </button>
                </li>
            </ul>
            <p class='text'>
                Anyway. You can probably see where I am going with this. We can
                map these emphatic letters to the uppercase versions of the
                letters they resemble.
            </p>
            <p class='text'>
                So <span class='arabic'>ح, ص, ض, ط,</span> and <span
                    class='arabic'>ظ</span
                > would map to T, D, S, H, Z respectively.
            </p>
            <p class='text'>
                In our code we keep each row of the keyboard as two arrays, one
                for the base case, and one for when the user is holding shift--
                or has pressed caps lock. And then swap between the two arrays
                depending on the state of the keyboard.
            </p>
            <pre>
<code>
{keyboardSwapCode}
{JSON.stringify({
  'type': 'letter',
  'ar': 'ط',
  'en': 'T',
  'label': ['T'],
  'title': 'Taa, does not have a corresponding sound in English',
  'shifted': 'ت'
}
, null, 2)}
</code>
</pre>
            <p class='text'>
                And then we can reuse our lookup function from before
            </p>
            <h3>Unique letters</h3>
            <p class='text'>
                I don't have a good name for these letters... lets call them
                "Unique" letters, of which there are six. These letters don't
                really have a equivalent in english, and don't really bear any
                resemblance to the letters we have already looked at.
            </p>
            <ul class='list grid'>
                <li>
                    <button value='sheen' class='letter-button'>
                        <span class='arabic'>ش (sheen)</span>
                    </button>
                </li>
                <li>
                    <button value='dhaa' class='letter-button'>
                        <span class='arabic'>ذ (dha)</span>
                    </button>
                </li>
                <li>
                    <button value='tha' class='letter-button'>
                        <span class='arabic'>ث (tha)</span>
                    </button>
                </li>
                <li>
                    <button value='khaa' class='letter-button'>
                        <span class='arabic'>خ (khaa)</span>
                    </button>
                </li>
                <li>

                <button value='ayn' class='letter-button'>
                    <span class='arabic'>ع (ayn)</span>
                </button>
                </li>
                <li>
                  <button value='ghayn' class='letter-button'>
                      <span class='arabic'>غ (ghayn)</span>
                  </button>
              </li>
            </ul>
          <p class="text">
            So yeah, these letters are a bit of a problem. So we have to get a bit creative.
          </p>
          <p class="text">
            However if you notice. The shape of these letters look similar to ones we have already seen. Just with some dots sprinkled on top.
          </p>
          <ul>
            <li class="list-row">
              <button value="seen" class="button letter-button">
                <span class="arabic">س (seen - s)</span>
              </button>
              <p>+ some dots gives us</p>
              <button value="sheen" class="letter-button">
                <span class="arabic">ش (sheen)</span>
              </button>
            </li>
            <li class="list-row">
              <button value="dal" class="button letter-button">
                <span class="arabic">د (dal - d)</span>
              </button>
              <p>+ one dot gives us</p>
              <button value="dhaa" class="letter-button">
                <span class="arabic">ذ (dha)</span>
              </button>
            </li>
            <li class="list-row">
              <button value="ta" class="button letter-button">
                <span class="arabic">ت (ta - t)</span>
              </button>
              <p>+ one dot gives us</p>
              <button value="tha" class="letter-button">
                <span class="arabic">ث (tha)</span>
              </button>
            </li>
            <li class="list-row">
              <button value="haa" class="button letter-button">
                <span class="arabic">ح (haa - H)</span>
              </button>
              <p>+ one dot gives us</p>
              <button value="khaa" class="letter-button">
                <span class="arabic">خ (khaa)</span>
              </button>
            </li>
            <i class="text">I ended up just using g for ayn. I dont really have a good reason but I needed a key</i>
            <li class="list-row">
              <button value="ayn" class="button letter-button">
                <span class="arabic">ع (ayn - g)</span>
              </button>
              <p>+ one dot gives us</p>
              <button value="ghayn" class="letter-button">
                <span class="arabic">غ (ghayn)</span>
              </button>
            </li>
          </ul>
          <p class="text">So how can we sprinkle dots? Because we are quickly running out of keys</p>
          <p class="text">
            I landed on <code>'</code> as being our dot sprinkler. So <code>s'</code> would give us <span class="arabic">ش</span> (sheen).
          </p>
          <p><code>H'</code> would give us <span class="arabic">خ</span> <i>(remember capital H because this is emphatic)</i></p>
          <p><code>t'</code> would give us <span class="arabic">ث</span> etc...</p>
          <p class="text">I think you can see how were quickly coming up with our own little shorthand</p>
          <p class="text">The code for this is pretty simple</p>
          <pre>
            <code>
              {dots}
            </code>
          </pre>
          <p class="text">
            Okay thats a lot of reading, how about we take a break and do some writing using the keyboard below.
          </p>
          <p class="text">Why dont you try writing my name <b>Sherif</b> <code>s'ryf</code></p>
          <p class="text">Or <b>house</b> -- <code>byt</code></p>
          <p class="text">Or <b>dog</b> -- <code>klb</code></p>
          <p class="text">
            Or <b>I like to drink tea</b> -- <code>ana bHb as'rb s'ay</code>
            <ul>
              <li><span class="arabic">أنا</span> (ana) = I</li>
              <li><span class="arabic">بحب</span> (bahib) = like</li>
              <li><span class="arabic">أشرب</span> (ashrab) = drink</li>
              <li><span class="arabic">شاي</span> (shay) = tea</li>
            </ul>
          </p>
          <p class="text">
            PS. Notice the little mark above the first <span class="arabic">ا</span> in I, and drink? Thats <b>Hamza </b><span class="arabic">ء</span>. We will get to him in a bit.
          </p>
          <p class="text">
            PPS. Notice how the word for tea <span class="arabic">شاي</span> (shay) is somewhat similar to chai, or tea even.
          </p>
          <arabic-keyboard showEnglishValue="true" showShiftedValue="true" > </arabic-keyboard> 
        </section>
    </div>
</Layout>

<style>
    .wrapper {
        padding: 12px 32px;
        font-family: var(--font-main);
        color: var(--text2);
    }

    .text {
        padding: 12px 0;
        font-size: 1.25rem;
        line-height: 1.5;
    }

    code {
        /* background-color: var(--tile4); */
        color: var(--text1);
        font-size: 1.25rem;
        padding: 4px;
    }
    .section {
        margin: 24px 0;
    }
    .highlight {
        color: red;
    }

    .arabic {
        font-size: 2rem;
    }

    .grid {
        margin: 24px 0;
        display: grid;
        list-style: none;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
    .letter-button {
        white-space: nowrap;
        background-color: var(--tile3);
        outline: none;
        border: none;
        cursor: pointer;
        color: var(--text2);
        transition: background-color 0.3s;
        &:hover {
            background-color: var(--tile4);
        }
    }

    .list-row {
        display: flex;
        flex-direction: row;
        gap: 10px;
        white-space: nowrap;
        align-items: center;
    }

    a {
      text-decoration: underline;
      color: var(--text2);
    }
</style>

<script>
    const letterButtons = document.querySelectorAll('.letter-button')

    letterButtons.forEach((button) => {
        button.addEventListener('click', () => {
            const letter = (button as HTMLButtonElement).value
            playAudio(letter)
        })
    })

    function playAudio(letter: string) {
        const audio = new Audio(`/letters/audios/${letter}.mp3`)
        audio.play()
    }

    // Function to update keyboard styles based on localStorage values
function updateKeyboardStyles() {
  const keyboard = document.querySelector('arabic-keyboard') as HTMLElement;
  
  if (keyboard) {
    const tile1 = localStorage.getItem('tile1') || getComputedStyle(document.body).getPropertyValue('--tile1');
    const tile3 = localStorage.getItem('tile3') || getComputedStyle(document.body).getPropertyValue('--tile3');
    const tile4 = localStorage.getItem('tile4') || getComputedStyle(document.body).getPropertyValue('--tile4');
    const tile5 = localStorage.getItem('tile5') || getComputedStyle(document.body).getPropertyValue('--tile5');
    const tile6 = localStorage.getItem('tile6') || getComputedStyle(document.body).getPropertyValue('--tile6');
    const text1 = localStorage.getItem('text1') || getComputedStyle(document.body).getPropertyValue('--text1');
    const text3 = localStorage.getItem('text3') || getComputedStyle(document.body).getPropertyValue('--text3');

    keyboard.style.setProperty('--button-background-color', tile4);
    keyboard.style.setProperty('--button-active-background-color', tile5);
    keyboard.style.setProperty('--button-active-border', `1px solid ${tile6}`);
    keyboard.style.setProperty('--button-hover-background-color', tile3);
    keyboard.style.setProperty('--textarea-background-color', tile1);
    keyboard.style.setProperty('--textarea-input-color', text1);
    keyboard.style.setProperty('--max-keyboard-width', '900px');
    keyboard.style.setProperty('--button-color', text1);
    keyboard.style.setProperty('--button-eng-color', text3);
    keyboard.style.setProperty('--button-shifted-color', text3);
  }
}

// Listen for storage changes in other tabs
window.addEventListener('local-storage-update', (event) => {
  console.log('Storage event', event);
  updateKeyboardStyles();
});

// Example of manually triggering the style update after changing localStorage
function updateTileColorInLocalStorage(newTile4: string) {
  localStorage.setItem('tile4', newTile4);
  updateKeyboardStyles();  // Trigger style update within the same tab
}

// Initial load of the styles when the page is loaded
document.addEventListener('DOMContentLoaded', () => {
  updateKeyboardStyles();
});

</script>
